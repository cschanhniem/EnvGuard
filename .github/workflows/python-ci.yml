name: Python CI

on:
  push:
    branches: [ main ]
    paths:
      - 'packages/envguard-python/**'
      - '.github/workflows/python-ci.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'packages/envguard-python/**'
      - '.github/workflows/python-ci.yml'

jobs:
  test:
    name: Test Python Package
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]

    defaults:
      run:
        working-directory: ./packages/envguard-python

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install hatch
        pip install .[test,dev]

    - name: Lint with Ruff
      run: |
        ruff check .

    - name: Check formatting with Black
      run: |
        black . --check

    - name: Run tests with pytest
      run: |
        pytest tests/ -v --cov=envguard_python --cov-report=xml

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v3
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

    - name: Build package
      run: |
        python -m build

  type-check:
    name: Type Check
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./packages/envguard-python

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install mypy types-setuptools
        pip install .

    - name: Run mypy
      run: |
        mypy src/envguard_python
